State 0:
          input ::= * processes
      (1) processes ::= *
          processes ::= * INCLUDE STRING processes
          processes ::= * INCLUDE_GUARD STRING processes
          processes ::= * process_or_template NAME CURLY_OPEN statements CURLY_CLOSE processes
          process_or_template ::= * PROCESS
          process_or_template ::= * TEMPLATE

                       INCLUDE shift  50
                 INCLUDE_GUARD shift  51
                       PROCESS shift  93
                      TEMPLATE shift  94
                     processes shift  49
           process_or_template shift  52
                         input accept
                     {default} reduce 1

State 1:
          statement ::= dotted_name ROUND_OPEN * statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
     (24) statement_args_maybe ::= *
          statement_args_maybe ::= * list_contents
          list_contents ::= * value
          list_contents ::= * value COMMA list_contents
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
          statement_args_maybe shift  55
                 list_contents shift  98
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  41
                     {default} reduce 24

State 2:
          statement ::= dotted_name ARROW dotted_name ROUND_OPEN * statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
     (24) statement_args_maybe ::= *
          statement_args_maybe ::= * list_contents
          list_contents ::= * value
          list_contents ::= * value COMMA list_contents
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
          statement_args_maybe shift  63
                 list_contents shift  98
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  41
                     {default} reduce 24

State 3:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list_contents ::= * value
          list_contents ::= * value COMMA list_contents
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= CURLY_OPEN * CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          list ::= CURLY_OPEN * list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                   CURLY_CLOSE shift  100
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                 list_contents shift  58
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  41

State 4:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map_contents ::= * value COLON value
          map_contents ::= * value COLON value COMMA map_contents
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= BRACKET_OPEN * BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          map ::= BRACKET_OPEN * map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                 BRACKET_CLOSE shift  113
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                          list shift  108
                  map_contents shift  61
                           map shift  109
                         invoc shift  111
                         value shift  42

State 5:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list_contents ::= * value
          list_contents ::= * value COMMA list_contents
          list_contents ::= value COMMA * list_contents
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                 list_contents shift  99
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  41

State 6:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map_contents ::= * value COLON value
          map_contents ::= * value COLON value COMMA map_contents
          map_contents ::= value COLON value COMMA * map_contents
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                          list shift  108
                  map_contents shift  102
                           map shift  109
                         invoc shift  111
                         value shift  42

State 7:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list_contents ::= * value
          list_contents ::= * value COMMA list_contents
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          invoc ::= value ROUND_OPEN * list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                 list_contents shift  60
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  41

State 8:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map_contents ::= value COLON * value
          map_contents ::= value COLON * value COMMA map_contents
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  43

State 9:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= ROUND_OPEN * value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  44

State 10:
          statement ::= IF ROUND_OPEN * value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  45

State 11:
          statement ::= FOREACH ROUND_OPEN * value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= FOREACH ROUND_OPEN * value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  46

State 12:
          elif ::= ELIF ROUND_OPEN * value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE
          elif ::= ELIF ROUND_OPEN * value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          list ::= * CURLY_OPEN CURLY_CLOSE
          list ::= * CURLY_OPEN list_contents CURLY_CLOSE
          map ::= * BRACKET_OPEN BRACKET_CLOSE
          map ::= * BRACKET_OPEN map_contents BRACKET_CLOSE
          invoc ::= * value ROUND_OPEN list_contents ROUND_CLOSE
          value ::= * STRING
          value ::= * AT_SIGN dotted_name
          value ::= * CARET name_list
          value ::= * dotted_name
          value ::= * list
          value ::= * map
          value ::= * ROUND_OPEN value ROUND_CLOSE
          value ::= * invoc

                        STRING shift  103
                          NAME shift  57
                    CURLY_OPEN shift  3
                    ROUND_OPEN shift  9
                  BRACKET_OPEN shift  4
                       AT_SIGN shift  28
                         CARET shift  29
                   dotted_name shift  107
                          list shift  108
                           map shift  109
                         invoc shift  111
                         value shift  48

State 13:
          processes ::= process_or_template NAME CURLY_OPEN * statements CURLY_CLOSE processes
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
          statements ::= * statement statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  54
                   dotted_name shift  40

State 14:
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN * statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
          statements ::= * statement statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  67
                   dotted_name shift  40

State 15:
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          else_maybe ::= ELSE CURLY_OPEN * statements CURLY_CLOSE
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
          statements ::= * statement statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  86
                   dotted_name shift  40

State 16:
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN * statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
          statements ::= * statement statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  73
                   dotted_name shift  40

State 17:
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= BLOCK CURLY_OPEN * statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
          statements ::= * statement statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  76
                   dotted_name shift  40

State 18:
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= TOKEN_DO CURLY_OPEN * statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
          statements ::= * statement statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  79
                   dotted_name shift  40

State 19:
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
     (18) statements ::= statement *
          statements ::= * statement statements
          statements ::= statement * statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  120
                   dotted_name shift  40
                     {default} reduce 18

State 20:
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN * statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
          statements ::= * statement statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  84
                   dotted_name shift  40

State 21:
          statement ::= * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= * IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          elif ::= ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN * statements CURLY_CLOSE
          elif ::= ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN * statements CURLY_CLOSE elif
          statement ::= * BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= * TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statements ::= * statement
          statements ::= * statement statements
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                            IF shift  65
                       FOREACH shift  70
                         BLOCK shift  75
                      TOKEN_DO shift  78
                     statement shift  19
                    statements shift  89
                   dotted_name shift  40

State 22:
      (1) processes ::= *
          processes ::= * INCLUDE STRING processes
          processes ::= INCLUDE STRING * processes
          processes ::= * INCLUDE_GUARD STRING processes
          processes ::= * process_or_template NAME CURLY_OPEN statements CURLY_CLOSE processes
          process_or_template ::= * PROCESS
          process_or_template ::= * TEMPLATE

                       INCLUDE shift  50
                 INCLUDE_GUARD shift  51
                       PROCESS shift  93
                      TEMPLATE shift  94
                     processes shift  90
           process_or_template shift  52
                     {default} reduce 1

State 23:
      (1) processes ::= *
          processes ::= * INCLUDE STRING processes
          processes ::= * INCLUDE_GUARD STRING processes
          processes ::= INCLUDE_GUARD STRING * processes
          processes ::= * process_or_template NAME CURLY_OPEN statements CURLY_CLOSE processes
          process_or_template ::= * PROCESS
          process_or_template ::= * TEMPLATE

                       INCLUDE shift  50
                 INCLUDE_GUARD shift  51
                       PROCESS shift  93
                      TEMPLATE shift  94
                     processes shift  91
           process_or_template shift  52
                     {default} reduce 1

State 24:
      (1) processes ::= *
          processes ::= * INCLUDE STRING processes
          processes ::= * INCLUDE_GUARD STRING processes
          processes ::= * process_or_template NAME CURLY_OPEN statements CURLY_CLOSE processes
          processes ::= process_or_template NAME CURLY_OPEN statements CURLY_CLOSE * processes
          process_or_template ::= * PROCESS
          process_or_template ::= * TEMPLATE

                       INCLUDE shift  50
                 INCLUDE_GUARD shift  51
                       PROCESS shift  93
                      TEMPLATE shift  94
                     processes shift  92
           process_or_template shift  52
                     {default} reduce 1

State 25:
          statement ::= IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE * elif_maybe else_maybe name_maybe SEMICOLON
     (10) elif_maybe ::= *
          elif_maybe ::= * elif
          elif ::= * ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE
          elif ::= * ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif

                          ELIF shift  87
                    elif_maybe shift  33
                          elif shift  123
                     {default} reduce 10

State 26:
          statement ::= dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE * name_maybe SEMICOLON
     (43) name_maybe ::= *
          name_maybe ::= * NAME

                          NAME shift  96
                    name_maybe shift  56
                     {default} reduce 43

State 27:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          dotted_name ::= NAME DOT * dotted_name

                          NAME shift  57
                   dotted_name shift  97

State 28:
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name
          value ::= AT_SIGN * dotted_name

                          NAME shift  57
                   dotted_name shift  104

State 29:
          name_list ::= * NAME
          name_list ::= * NAME DOT name_list
          value ::= CARET * name_list

                          NAME shift  59
                     name_list shift  106

State 30:
          name_list ::= * NAME
          name_list ::= * NAME DOT name_list
          name_list ::= NAME DOT * name_list

                          NAME shift  59
                     name_list shift  105

State 31:
          statement ::= dotted_name ARROW * dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          dotted_name ::= * NAME
          dotted_name ::= * NAME DOT dotted_name

                          NAME shift  57
                   dotted_name shift  62

State 32:
          statement ::= dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE * name_maybe SEMICOLON
     (43) name_maybe ::= *
          name_maybe ::= * NAME

                          NAME shift  96
                    name_maybe shift  64
                     {default} reduce 43

State 33:
          statement ::= IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe * else_maybe name_maybe SEMICOLON
     (14) else_maybe ::= *
          else_maybe ::= * ELSE CURLY_OPEN statements CURLY_CLOSE

                          ELSE shift  69
                    else_maybe shift  34
                     {default} reduce 14

State 34:
          statement ::= IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe * name_maybe SEMICOLON
     (43) name_maybe ::= *
          name_maybe ::= * NAME

                          NAME shift  96
                    name_maybe shift  68
                     {default} reduce 43

State 35:
          statement ::= FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE * name_maybe SEMICOLON
     (43) name_maybe ::= *
          name_maybe ::= * NAME

                          NAME shift  96
                    name_maybe shift  74
                     {default} reduce 43

State 36:
          statement ::= BLOCK CURLY_OPEN statements CURLY_CLOSE * name_maybe SEMICOLON
     (43) name_maybe ::= *
          name_maybe ::= * NAME

                          NAME shift  96
                    name_maybe shift  77
                     {default} reduce 43

State 37:
          statement ::= TOKEN_DO CURLY_OPEN statements CURLY_CLOSE * name_maybe SEMICOLON
     (43) name_maybe ::= *
          name_maybe ::= * NAME

                          NAME shift  96
                    name_maybe shift  80
                     {default} reduce 43

State 38:
          statement ::= FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE * name_maybe SEMICOLON
     (43) name_maybe ::= *
          name_maybe ::= * NAME

                          NAME shift  96
                    name_maybe shift  85
                     {default} reduce 43

State 39:
          elif ::= * ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE
     (12) elif ::= ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE *
          elif ::= * ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif
          elif ::= ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE * elif

                          ELIF shift  87
                          elif shift  124
                     {default} reduce 12

State 40:
          statement ::= dotted_name * ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statement ::= dotted_name * ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON

                    ROUND_OPEN shift  1
                         ARROW shift  31

State 41:
     (26) list_contents ::= value *
          list_contents ::= value * COMMA list_contents
          invoc ::= value * ROUND_OPEN list_contents ROUND_CLOSE

                    ROUND_OPEN shift  7
                         COMMA shift  5
                     {default} reduce 26

State 42:
          map_contents ::= value * COLON value
          map_contents ::= value * COLON value COMMA map_contents
          invoc ::= value * ROUND_OPEN list_contents ROUND_CLOSE

                    ROUND_OPEN shift  7
                         COLON shift  8

State 43:
     (30) map_contents ::= value COLON value *
          map_contents ::= value COLON value * COMMA map_contents
          invoc ::= value * ROUND_OPEN list_contents ROUND_CLOSE

                    ROUND_OPEN shift  7
                         COMMA shift  6
                     {default} reduce 30

State 44:
          invoc ::= value * ROUND_OPEN list_contents ROUND_CLOSE
          value ::= ROUND_OPEN value * ROUND_CLOSE

                    ROUND_OPEN shift  7
                   ROUND_CLOSE shift  112

State 45:
          statement ::= IF ROUND_OPEN value * ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON
          invoc ::= value * ROUND_OPEN list_contents ROUND_CLOSE

                    ROUND_OPEN shift  7
                   ROUND_CLOSE shift  66

State 46:
          statement ::= FOREACH ROUND_OPEN value * AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= FOREACH ROUND_OPEN value * AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          invoc ::= value * ROUND_OPEN list_contents ROUND_CLOSE

                    ROUND_OPEN shift  7
                            AS shift  71

State 47:
          statement ::= FOREACH ROUND_OPEN value AS NAME * ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= FOREACH ROUND_OPEN value AS NAME * COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                   ROUND_CLOSE shift  72
                         COLON shift  81

State 48:
          elif ::= ELIF ROUND_OPEN value * ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE
          elif ::= ELIF ROUND_OPEN value * ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif
          invoc ::= value * ROUND_OPEN list_contents ROUND_CLOSE

                    ROUND_OPEN shift  7
                   ROUND_CLOSE shift  88

State 49:
      (0) input ::= processes *

                             $ reduce 0

State 50:
          processes ::= INCLUDE * STRING processes

                        STRING shift  22

State 51:
          processes ::= INCLUDE_GUARD * STRING processes

                        STRING shift  23

State 52:
          processes ::= process_or_template * NAME CURLY_OPEN statements CURLY_CLOSE processes

                          NAME shift  53

State 53:
          processes ::= process_or_template NAME * CURLY_OPEN statements CURLY_CLOSE processes

                    CURLY_OPEN shift  13

State 54:
          processes ::= process_or_template NAME CURLY_OPEN statements * CURLY_CLOSE processes

                   CURLY_CLOSE shift  24

State 55:
          statement ::= dotted_name ROUND_OPEN statement_args_maybe * ROUND_CLOSE name_maybe SEMICOLON

                   ROUND_CLOSE shift  26

State 56:
          statement ::= dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe * SEMICOLON

                     SEMICOLON shift  95

State 57:
     (20) dotted_name ::= NAME *
          dotted_name ::= NAME * DOT dotted_name

                           DOT shift  27
                     {default} reduce 20

State 58:
          list ::= CURLY_OPEN list_contents * CURLY_CLOSE

                   CURLY_CLOSE shift  101

State 59:
     (22) name_list ::= NAME *
          name_list ::= NAME * DOT name_list

                           DOT shift  30
                     {default} reduce 22

State 60:
          invoc ::= value ROUND_OPEN list_contents * ROUND_CLOSE

                   ROUND_CLOSE shift  110

State 61:
          map ::= BRACKET_OPEN map_contents * BRACKET_CLOSE

                 BRACKET_CLOSE shift  114

State 62:
          statement ::= dotted_name ARROW dotted_name * ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON

                    ROUND_OPEN shift  2

State 63:
          statement ::= dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe * ROUND_CLOSE name_maybe SEMICOLON

                   ROUND_CLOSE shift  32

State 64:
          statement ::= dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe * SEMICOLON

                     SEMICOLON shift  115

State 65:
          statement ::= IF * ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON

                    ROUND_OPEN shift  10

State 66:
          statement ::= IF ROUND_OPEN value ROUND_CLOSE * CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON

                    CURLY_OPEN shift  14

State 67:
          statement ::= IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements * CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON

                   CURLY_CLOSE shift  25

State 68:
          statement ::= IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe * SEMICOLON

                     SEMICOLON shift  116

State 69:
          else_maybe ::= ELSE * CURLY_OPEN statements CURLY_CLOSE

                    CURLY_OPEN shift  15

State 70:
          statement ::= FOREACH * ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= FOREACH * ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                    ROUND_OPEN shift  11

State 71:
          statement ::= FOREACH ROUND_OPEN value AS * NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON
          statement ::= FOREACH ROUND_OPEN value AS * NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                          NAME shift  47

State 72:
          statement ::= FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE * CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                    CURLY_OPEN shift  16

State 73:
          statement ::= FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements * CURLY_CLOSE name_maybe SEMICOLON

                   CURLY_CLOSE shift  35

State 74:
          statement ::= FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe * SEMICOLON

                     SEMICOLON shift  117

State 75:
          statement ::= BLOCK * CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                    CURLY_OPEN shift  17

State 76:
          statement ::= BLOCK CURLY_OPEN statements * CURLY_CLOSE name_maybe SEMICOLON

                   CURLY_CLOSE shift  36

State 77:
          statement ::= BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe * SEMICOLON

                     SEMICOLON shift  118

State 78:
          statement ::= TOKEN_DO * CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                    CURLY_OPEN shift  18

State 79:
          statement ::= TOKEN_DO CURLY_OPEN statements * CURLY_CLOSE name_maybe SEMICOLON

                   CURLY_CLOSE shift  37

State 80:
          statement ::= TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe * SEMICOLON

                     SEMICOLON shift  119

State 81:
          statement ::= FOREACH ROUND_OPEN value AS NAME COLON * NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                          NAME shift  82

State 82:
          statement ::= FOREACH ROUND_OPEN value AS NAME COLON NAME * ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                   ROUND_CLOSE shift  83

State 83:
          statement ::= FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE * CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON

                    CURLY_OPEN shift  20

State 84:
          statement ::= FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements * CURLY_CLOSE name_maybe SEMICOLON

                   CURLY_CLOSE shift  38

State 85:
          statement ::= FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe * SEMICOLON

                     SEMICOLON shift  121

State 86:
          else_maybe ::= ELSE CURLY_OPEN statements * CURLY_CLOSE

                   CURLY_CLOSE shift  122

State 87:
          elif ::= ELIF * ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE
          elif ::= ELIF * ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif

                    ROUND_OPEN shift  12

State 88:
          elif ::= ELIF ROUND_OPEN value ROUND_CLOSE * CURLY_OPEN statements CURLY_CLOSE
          elif ::= ELIF ROUND_OPEN value ROUND_CLOSE * CURLY_OPEN statements CURLY_CLOSE elif

                    CURLY_OPEN shift  21

State 89:
          elif ::= ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements * CURLY_CLOSE
          elif ::= ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements * CURLY_CLOSE elif

                   CURLY_CLOSE shift  39

State 90:
      (2) processes ::= INCLUDE STRING processes *

                     {default} reduce 2

State 91:
      (3) processes ::= INCLUDE_GUARD STRING processes *

                     {default} reduce 3

State 92:
      (4) processes ::= process_or_template NAME CURLY_OPEN statements CURLY_CLOSE processes *

                     {default} reduce 4

State 93:
     (45) process_or_template ::= PROCESS *

                     {default} reduce 45

State 94:
     (46) process_or_template ::= TEMPLATE *

                     {default} reduce 46

State 95:
      (5) statement ::= dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON *

                     {default} reduce 5

State 96:
     (44) name_maybe ::= NAME *

                     {default} reduce 44

State 97:
     (21) dotted_name ::= NAME DOT dotted_name *

                     {default} reduce 21

State 98:
     (25) statement_args_maybe ::= list_contents *

                     {default} reduce 25

State 99:
     (27) list_contents ::= value COMMA list_contents *

                     {default} reduce 27

State 100:
     (28) list ::= CURLY_OPEN CURLY_CLOSE *

                     {default} reduce 28

State 101:
     (29) list ::= CURLY_OPEN list_contents CURLY_CLOSE *

                     {default} reduce 29

State 102:
     (31) map_contents ::= value COLON value COMMA map_contents *

                     {default} reduce 31

State 103:
     (35) value ::= STRING *

                     {default} reduce 35

State 104:
     (36) value ::= AT_SIGN dotted_name *

                     {default} reduce 36

State 105:
     (23) name_list ::= NAME DOT name_list *

                     {default} reduce 23

State 106:
     (37) value ::= CARET name_list *

                     {default} reduce 37

State 107:
     (38) value ::= dotted_name *

                     {default} reduce 38

State 108:
     (39) value ::= list *

                     {default} reduce 39

State 109:
     (40) value ::= map *

                     {default} reduce 40

State 110:
     (34) invoc ::= value ROUND_OPEN list_contents ROUND_CLOSE *

                     {default} reduce 34

State 111:
     (42) value ::= invoc *

                     {default} reduce 42

State 112:
     (41) value ::= ROUND_OPEN value ROUND_CLOSE *

                     {default} reduce 41

State 113:
     (32) map ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 32

State 114:
     (33) map ::= BRACKET_OPEN map_contents BRACKET_CLOSE *

                     {default} reduce 33

State 115:
      (6) statement ::= dotted_name ARROW dotted_name ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON *

                     {default} reduce 6

State 116:
      (7) statement ::= IF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif_maybe else_maybe name_maybe SEMICOLON *

                     {default} reduce 7

State 117:
      (8) statement ::= FOREACH ROUND_OPEN value AS NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON *

                     {default} reduce 8

State 118:
     (16) statement ::= BLOCK CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON *

                     {default} reduce 16

State 119:
     (17) statement ::= TOKEN_DO CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON *

                     {default} reduce 17

State 120:
     (19) statements ::= statement statements *

                     {default} reduce 19

State 121:
      (9) statement ::= FOREACH ROUND_OPEN value AS NAME COLON NAME ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE name_maybe SEMICOLON *

                     {default} reduce 9

State 122:
     (15) else_maybe ::= ELSE CURLY_OPEN statements CURLY_CLOSE *

                     {default} reduce 15

State 123:
     (11) elif_maybe ::= elif *

                     {default} reduce 11

State 124:
     (13) elif ::= ELIF ROUND_OPEN value ROUND_CLOSE CURLY_OPEN statements CURLY_CLOSE elif *

                     {default} reduce 13

----------------------------------------------------
Symbols:
    0: $:
    1: INCLUDE
    2: STRING
    3: INCLUDE_GUARD
    4: NAME
    5: CURLY_OPEN
    6: CURLY_CLOSE
    7: ROUND_OPEN
    8: ROUND_CLOSE
    9: SEMICOLON
   10: ARROW
   11: IF
   12: FOREACH
   13: AS
   14: COLON
   15: ELIF
   16: ELSE
   17: BLOCK
   18: TOKEN_DO
   19: DOT
   20: COMMA
   21: BRACKET_OPEN
   22: BRACKET_CLOSE
   23: AT_SIGN
   24: CARET
   25: PROCESS
   26: TEMPLATE
   27: error:
   28: processes: <lambda> INCLUDE INCLUDE_GUARD PROCESS TEMPLATE
   29: statement: NAME IF FOREACH BLOCK TOKEN_DO
   30: elif_maybe: <lambda> ELIF
   31: elif: ELIF
   32: else_maybe: <lambda> ELSE
   33: statements: NAME IF FOREACH BLOCK TOKEN_DO
   34: dotted_name: NAME
   35: statement_args_maybe: <lambda> STRING NAME CURLY_OPEN ROUND_OPEN BRACKET_OPEN AT_SIGN CARET
   36: list_contents: STRING NAME CURLY_OPEN ROUND_OPEN BRACKET_OPEN AT_SIGN CARET
   37: list: CURLY_OPEN
   38: map_contents: STRING NAME CURLY_OPEN ROUND_OPEN BRACKET_OPEN AT_SIGN CARET
   39: map: BRACKET_OPEN
   40: invoc: STRING NAME CURLY_OPEN ROUND_OPEN BRACKET_OPEN AT_SIGN CARET
   41: value: STRING NAME CURLY_OPEN ROUND_OPEN BRACKET_OPEN AT_SIGN CARET
   42: name_maybe: <lambda> NAME
   43: process_or_template: PROCESS TEMPLATE
   44: name_list: NAME
   45: input: INCLUDE INCLUDE_GUARD PROCESS TEMPLATE
